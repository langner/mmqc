---
title: Optimizing vector norms in Python
author: Karol M. Langner
categories: python, numpy, optimization, algebra
date: 2011/09/01 13:40:32
updated: 2011/09/11 22:04:46
draft: true
---

python numyp vector norm timigs
                #drs = (coordinates.take(npi1, axis=0) - coordinates.take(npi2, axis=0)) % 32.0
                #radials = numpy.array([numpy.linalg.norm(dr) for dr in drs])
                #radials = numpy.array([numpy.sqrt(dr[0]*dr[0] + dr[1]*dr[1]) for dr in drs])
                #radials = numpy.array([numpy.sqrt(numpy.dot(dr,dr)) for dr in drs])
                #radials = numpy.sqrt(numpy.array([numpy.dot(dr,dr) for dr in drs]))
                #radials = numpy.sqrt((drs*drs).sum(axis=1))
                #radialdists.extend(numpy.sqrt((drs*drs).sum(axis=1)))
